import telebot
from telebot import types
import logging

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
logging.basicConfig(level=logging.INFO)

# –¢–æ–∫–µ–Ω –¥–ª—è –±–æ—Ç–∞
TOKEN = '6310902050:AAHyeKrUmHXeB7rJYihhqlT269tXHR0DUr4'
bot = telebot.TeleBot(TOKEN)

# –°–ø–∏—Å–æ–∫ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–≤ (tg ID)
admin_ids = [589850009]

# –°–ø–∏—Å–æ–∫ –∫–≤–∞—Ä—Ç–∏—Ä
apartments = [
    {'id': 1, 'name': '1-–∫–æ–º–Ω–∞—Ç–Ω–∞—è –∫–≤–∞—Ä—Ç–∏—Ä–∞ –Ω–∞ –ê–≤–∏–∞–º–æ—Ç–æ—Ä–Ω–æ–π', 'description': '–£—é—Ç–Ω–∞—è 1-–∫–æ–º–Ω–∞—Ç–Ω–∞—è –∫–≤–∞—Ä—Ç–∏—Ä–∞ –≤ —Ü–µ–Ω—Ç—Ä–µ –≥–æ—Ä–æ–¥–∞.', 'price': '10000 —Ä—É–±/–º–µ—Å', 'type': '1-–∫–æ–º–Ω–∞—Ç–Ω–∞—è', 'photos': ['https://artproducts.ru/media/wp-content/uploads/2022/06/dizain-odnokomnatnoi-kvartiry-1-1140x700.png', 'https://my-dom.design/wp-content/uploads/2023/06/kuhnja-gostinaja-2-1.jpg']},
    {'id': 2, 'name': '1-–∫–æ–º–Ω–∞—Ç–Ω–∞—è –∫–≤–∞—Ä—Ç–∏—Ä–∞ –Ω–∞ –ê–≤–∏–∞–º–æ—Ç–æ—Ä–Ω–æ–π', 'description': '–£—é—Ç–Ω–∞—è 1-–∫–æ–º–Ω–∞—Ç–Ω–∞—è –∫–≤–∞—Ä—Ç–∏—Ä–∞ –≤ —Ü–µ–Ω—Ç—Ä–µ –≥–æ—Ä–æ–¥–∞.', 'price': '10000 —Ä—É–±/–º–µ—Å', 'type': '1-–∫–æ–º–Ω–∞—Ç–Ω–∞—è', 'photos': ['https://cdn2.divan.ru/img/v1/zZopBG2UxXbZfti4HzKRodSDgOz4w6arNZVztDXdhuY/rs:fit:1920:1440:0:0/g:ce:0:0/bg:ffffff/q:85/czM6Ly9kaXZhbi9ja2VkaXRvci93aWtpLWFydGljbGUvMjU3MC82M2M1NWIwYzg2YWUxLmpwZw.jpg', 'https://salon.ru/storage/thumbs/gallery/710/709862/5000_5000_s123.jpg']},
    {'id': 3, 'name': '1-–∫–æ–º–Ω–∞—Ç–Ω–∞—è –∫–≤–∞—Ä—Ç–∏—Ä–∞ –Ω–∞ –ê–≤–∏–∞–º–æ—Ç–æ—Ä–Ω–æ–π', 'description': '–£—é—Ç–Ω–∞—è 1-–∫–æ–º–Ω–∞—Ç–Ω–∞—è –∫–≤–∞—Ä—Ç–∏—Ä–∞ —Å —Å–æ–≤—Ä–µ–º–µ–Ω–Ω–æ–π –º–µ–±–µ–ª—å—é.', 'price': '15000 —Ä—É–±/–º–µ—Å', 'type': '1-–∫–æ–º–Ω–∞—Ç–Ω–∞—è', 'photos': ['https://dbo.ru/upload/big/885539_1.jpg', 'https://dbo.ru/upload/big/885539_2.jpg']},
    {'id': 4, 'name': '2-–∫–æ–º–Ω–∞—Ç–Ω–∞—è –∫–≤–∞—Ä—Ç–∏—Ä–∞ –Ω–∞ –ê–≤–∏–∞–º–æ—Ç–æ—Ä–Ω–æ–π', 'description': '–û–±—ã—á–Ω–∞—è 2-–∫–æ–º–Ω–∞—Ç–Ω–∞—è –∫–≤–∞—Ä—Ç–∏—Ä–∞, –ø–æ–¥—Ö–æ–¥—è—â–∞—è –¥–ª—è —Å–µ–º—å–∏.', 'price': '20000 —Ä—É–±/–º–µ—Å', 'type': '2-–∫–æ–º–Ω–∞—Ç–Ω–∞—è', 'photos': ['https://cdn.mskguru.ru/uploads/flats/4611/kvartry-v-4611-zhk-festivaly-park2-1606137615_5112.jpg', 'https://www.vincent-realty.ru/upload/resize_cache/iblock/715/1600_1200_0e00602c9673d0782708401ec29b5239f/9hii8ztbjbod1ewd7ve60paf8gkm83ze.jpg']},
    {'id': 5, 'name': '–°–æ–≤—Ä–µ–º–µ–Ω–Ω–∞—è 2-–∫–æ–º–Ω–∞—Ç–Ω–∞—è –∫–≤–∞—Ä—Ç–∏—Ä–∞ –Ω–∞ –ê–≤–∏–∞–º–æ—Ç–æ—Ä–Ω–æ–π', 'description': '–°–æ–≤—Ä–µ–º–µ–Ω–Ω–∞—è 2-–∫–æ–º–Ω–∞—Ç–Ω–∞—è –∫–≤–∞—Ä—Ç–∏—Ä–∞ —Å –Ω–æ–≤—ã–º —Ä–µ–º–æ–Ω—Ç–æ–º.', 'price': '24000 —Ä—É–±/–º–µ—Å', 'type': '2-–∫–æ–º–Ω–∞—Ç–Ω–∞—è', 'photos': ['https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcTOE3DpDkqpt_m_XuHPfT7UxDQwCz1-SIe2og&s', 'https://i.pinimg.com/originals/b9/dc/fd/b9dcfd440d540103509661a2f1487d72.jpg', 'https://dizayn-interera.moscow/images/detailed/108/1.jpg']},
    {'id': 6, 'name': '–ü—Ä–æ—Å—Ç–æ—Ä–Ω–∞—è 2-–∫–æ–º–Ω–∞—Ç–Ω–∞—è –∫–≤–∞—Ä—Ç–∏—Ä–∞ —Å –≤–∏–¥–æ–º –Ω–∞ –ø–∞—Ä–∫', 'description': '–ü—Ä–æ—Å—Ç–æ—Ä–Ω–∞—è 2-–∫–æ–º–Ω–∞—Ç–Ω–∞—è –∫–≤–∞—Ä—Ç–∏—Ä–∞ —Å –≤–∏–¥–æ–º –Ω–∞ –ø–∞—Ä–∫.', 'price': '25000 —Ä—É–±/–º–µ—Å', 'type': '2-–∫–æ–º–Ω–∞—Ç–Ω–∞—è', 'photos': ['https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcTDRc6pD6klzUMWELy_UZaIHoLbXdxXNaW7Sg&s', 'https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcTGPOId7vQOlXkaurSvvFLMIFjxIukXs-pdUg&s']},
    {'id': 7, 'name': '–°–æ–≤—Ä–µ–º–µ–Ω–Ω–∞—è —Å—Ç—É–¥–∏—è –Ω–∞ –ê–≤–∏–∞–º–æ—Ç–æ—Ä–Ω–æ–π', 'description': '–°–æ–≤—Ä–µ–º–µ–Ω–Ω–∞—è —Å—Ç—É–¥–∏—è —Å –Ω–æ–≤—ã–º —Ä–µ–º–æ–Ω—Ç–æ–º.', 'price': '8000 —Ä—É–±/–º–µ—Å', 'type': '–°—Ç—É–¥–∏—è', 'photos': ['https://remont-f.ru/upload/iblock/f6a/06.jpg', 'https://remont-f.ru/upload/resize_cache/iblock/1b8/440_275_2/dizayn-interyera-3-komnatnoj-kvartiry-106-kv-m-foto-9-3866.jpg']},
    {'id': 8, 'name': '–ö–æ–º—Ñ–æ—Ä—Ç–Ω–∞—è —Å—Ç—É–¥–∏—è –Ω–∞ –ê–≤–∏–∞–º–æ—Ç–æ—Ä–Ω–æ–π', 'description': '–ö–æ–º—Ñ–æ—Ä—Ç–Ω–∞—è —Å—Ç—É–¥–∏—è —Å –µ–≤—Ä–æ —Ä–µ–º–æ–Ω—Ç–æ–º.', 'price': '9000 —Ä—É–±/–º–µ—Å', 'type': '–°—Ç—É–¥–∏—è', 'photos': ['https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcQMeUM4hN7nZDMPVdHrCLcIa2RxpBCCvh1GeQ&s', 'https://cdn.worldota.net/t/640x400/extranet/50/71/5071f3febbaef6c49efd22865f9f76db737d712c.jpeg']},
    {'id': 9, 'name': '–ë–æ–º–±–æ–≤–∞—è —Å—Ç—É–¥–∏—è –Ω–∞ –ê–≤–∏–∞–º–æ—Ç–æ—Ä–Ω–æ–π', 'description': '–ë–æ–º–±–æ–≤–∞—è —Å—Ç—É–¥–∏—è —Å —à–∏–∫–∞—Ä–Ω—ã–º —Ä–µ–º–æ–Ω—Ç–æ–º.', 'price': '8500 —Ä—É–±/–º–µ—Å', 'type': '–°—Ç—É–¥–∏—è', 'photos': ['https://cdn.worldota.net/t/x500/extranet/be/b7/beb7716f9e04dbe7d6fb0c1f00bce994497a7000.jpeg', 'https://cdn.worldota.net/t/640x400/extranet/96/05/9605ec9fb718df5dfdf5478e953ffe2b1821388e.jpeg']}
]

# –°–ª–æ–≤–∞—Ä—å –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è —Å–æ—Å—Ç–æ—è–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
user_states = {}

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –æ—Å–Ω–æ–≤–Ω–æ–≥–æ –º–µ–Ω—é
def create_main_menu(is_admin=False):
    markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
    list_button = types.KeyboardButton('üè¢ –°–ø–∏—Å–æ–∫ –ø–æ–º–µ—â–µ–Ω–∏–π')
    contact_button = types.KeyboardButton('üìû –ö–æ–Ω—Ç–∞–∫—Ç—ã')
    help_button = types.KeyboardButton('‚Ñπ –ü–æ–º–æ—â—å')

    if is_admin:
        admin_button = types.KeyboardButton('üîß –ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω–∏–µ')
        markup.add(list_button, contact_button, help_button, admin_button)
    else:
        markup.add(list_button, contact_button, help_button)

    return markup

# –ö–æ–º–∞–Ω–¥–∞ /start
@bot.message_handler(commands=['start'])
def start(message):
    is_admin = message.from_user.id in admin_ids
    bot.send_message(message.chat.id, '–ü—Ä–∏–≤–µ—Ç! –Ø –±–æ—Ç –¥–ª—è –∞—Ä–µ–Ω–¥—ã –ø–æ–º–µ—â–µ–Ω–∏–π. –ß–µ–º –º–æ–≥—É –ø–æ–º–æ—á—å?', reply_markup=create_main_menu(is_admin))

# –ö–æ–º–∞–Ω–¥–∞ /help
@bot.message_handler(commands=['help'])
def help(message):
    help_text = (
        "–î–æ—Å—Ç—É–ø–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã:\n"
        "/start - –ù–∞—á–∞—Ç—å —Ä–∞–±–æ—Ç—É —Å –±–æ—Ç–æ–º\n"
        "/help - –ü–æ–ª—É—á–∏—Ç—å —Å–ø–∏—Å–æ–∫ –∫–æ–º–∞–Ω–¥\n"
        "/list - –ü–æ–∫–∞–∑–∞—Ç—å —Å–ø–∏—Å–æ–∫ –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –ø–æ–º–µ—â–µ–Ω–∏–π\n"
        "/contact - –ü–æ–ª—É—á–∏—Ç—å –∫–æ–Ω—Ç–∞–∫—Ç–Ω—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é"
    )
    if message.from_user.id in admin_ids:
        help_text += "\n/admin - –ü–∞–Ω–µ–ª—å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞"
    bot.send_message(message.chat.id, help_text, reply_markup=create_main_menu(message.from_user.id in admin_ids))

# –ö–æ–º–∞–Ω–¥–∞ /list
@bot.message_handler(commands=['list'])
def list_rooms(message):
    markup = types.InlineKeyboardMarkup(row_width=2)
    button1 = types.InlineKeyboardButton("1-–∫–æ–º–Ω–∞—Ç–Ω–∞—è", callback_data='filter_1-–∫–æ–º–Ω–∞—Ç–Ω–∞—è')
    button2 = types.InlineKeyboardButton("2-–∫–æ–º–Ω–∞—Ç–Ω–∞—è", callback_data='filter_2-–∫–æ–º–Ω–∞—Ç–Ω–∞—è')
    button3 = types.InlineKeyboardButton("–°—Ç—É–¥–∏—è", callback_data='filter_–°—Ç—É–¥–∏—è')
    markup.add(button1, button2, button3)
    bot.send_message(message.chat.id, '–í—ã–±–µ—Ä–∏—Ç–µ —Ç–∏–ø –∫–≤–∞—Ä—Ç–∏—Ä—ã:', reply_markup=markup)

# –ö–æ–º–∞–Ω–¥–∞ /requests
@bot.message_handler(commands=['requests'])
def view_requests(message):
    if message.from_user.id in admin_ids:
        try:
            with open('requests.txt', 'r') as file:
                requests_text = file.read()
            bot.send_message(message.chat.id, f'–¢–µ–∫—É—â–∏–µ –∑–∞—è–≤–∫–∏ –Ω–∞ –∞—Ä–µ–Ω–¥—É:\n{requests_text}', reply_markup=create_main_menu(True))
        except FileNotFoundError:
            bot.send_message(message.chat.id, '–§–∞–π–ª —Å –∑–∞—è–≤–∫–∞–º–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω.', reply_markup=create_main_menu(True))
    else:
        bot.send_message(message.chat.id, "–£ –≤–∞—Å –Ω–µ—Ç –¥–æ—Å—Ç—É–ø–∞ –∫ –ø—Ä–æ—Å–º–æ—Ç—Ä—É –∑–∞—è–≤–æ–∫.", reply_markup=create_main_menu())




# –ö–æ–º–∞–Ω–¥–∞ /admin
@bot.message_handler(commands=['admin'])
def admin_panel(message):
    if message.from_user.id in admin_ids:
        admin_text = (
            "–ü–∞–Ω–µ–ª—å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞:\n"
            "/requests - –ü—Ä–æ—Å–º–æ—Ç—Ä —Ç–µ–∫—É—â–∏—Ö –∑–∞—è–≤–æ–∫ –Ω–∞ –∞—Ä–µ–Ω–¥—É\n"
            "/delete_request [id] - –£–¥–∞–ª–∏—Ç—å –∑–∞—è–≤–∫—É –ø–æ –∏–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ç–æ—Ä—É"
        )
        bot.send_message(message.chat.id, admin_text, reply_markup=create_main_menu(True))
    else:
        bot.send_message(message.chat.id, "–£ –≤–∞—Å –Ω–µ—Ç –¥–æ—Å—Ç—É–ø–∞ –∫ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–∏–≤–Ω–æ–π –ø–∞–Ω–µ–ª–∏.", reply_markup=create_main_menu())



# –§—É–Ω–∫—Ü–∏—è –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è —Å–æ–æ–±—â–µ–Ω–∏—è —Å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–µ–π –æ –∫–≤–∞—Ä—Ç–∏—Ä–µ
def create_apartment_message(apartment, index, total):
    text = (
        f"üè† –ù–∞–∑–≤–∞–Ω–∏–µ: {apartment['name']}\n"
        f"üìã –û–ø–∏—Å–∞–Ω–∏–µ: {apartment['description']}\n"
        f"üí∞ –¶–µ–Ω–∞: {apartment['price']}\n\n"
        f"–ö–≤–∞—Ä—Ç–∏—Ä–∞ {index+1} –∏–∑ {total}"
    )
    return text

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –∫–≤–∞—Ä—Ç–∏—Ä–µ
def send_apartment(chat_id, apartments_list, index, previous_message_ids=None):
    apartment = apartments_list[index]
    total = len(apartments_list)
    message_text = create_apartment_message(apartment, index, total)
    markup = types.InlineKeyboardMarkup(row_width=2)
    prev_button = types.InlineKeyboardButton("‚¨ÖÔ∏è", callback_data=f'prev_{index}_{apartment["type"]}')
    next_button = types.InlineKeyboardButton("‚û°Ô∏è", callback_data=f'next_{index}_{apartment["type"]}')
    book_button = types.InlineKeyboardButton("üìÖ –ó–∞–±—Ä–æ–Ω–∏—Ä–æ–≤–∞—Ç—å", callback_data=f'book_{apartment["id"]}')
    markup.add(prev_button, next_button, book_button)

    if previous_message_ids:
        for msg_id in previous_message_ids:
            bot.delete_message(chat_id, msg_id)

    photos = apartment['photos']
    new_message_ids = []
    if photos:
        media_group = [types.InputMediaPhoto(photo) for photo in photos]
        media_messages = bot.send_media_group(chat_id, media_group)
        new_message_ids.extend([msg.message_id for msg in media_messages])

    message = bot.send_message(chat_id, message_text, reply_markup=markup)
    new_message_ids.append(message.message_id)
    
    return new_message_ids

# –û–±—Ä–∞–±–æ—Ç–∫–∞ –Ω–∞–∂–∞—Ç–∏–π –Ω–∞ inline-–∫–Ω–æ–ø–∫–∏
@bot.callback_query_handler(func=lambda call: call.data.startswith('filter_') or call.data.startswith('prev_') or call.data.startswith('next_') or call.data.startswith('book_'))
def callback_query(call):
    data = call.data
    chat_id = call.message.chat.id

    if data.startswith('filter_'):
        filter_type = data.split('_')[1]
        filtered_apartments = [apt for apt in apartments if apt['type'] == filter_type]
        if not filtered_apartments:
            bot.send_message(chat_id, "–ö —Å–æ–∂–∞–ª–µ–Ω–∏—é, –Ω–µ—Ç –∫–≤–∞—Ä—Ç–∏—Ä –¥–∞–Ω–Ω–æ–≥–æ —Ç–∏–ø–∞.")
            return
        user_states[chat_id] = {'index': 0, 'type': filter_type, 'message_ids': []}
        message_ids = send_apartment(chat_id, filtered_apartments, 0)
        user_states[chat_id]['message_ids'] = message_ids

    elif data.startswith('prev_') or data.startswith('next_'):
        parts = data.split('_')
        current_index = int(parts[1])
        apartment_type = parts[2]
        filtered_apartments = [apt for apt in apartments if apt['type'] == apartment_type]
        total = len(filtered_apartments)

        if data.startswith('prev_'):
            new_index = (current_index - 1) % total
        elif data.startswith('next_'):
            new_index = (current_index + 1) % total

        previous_message_ids = user_states[chat_id]['message_ids']
        message_ids = send_apartment(chat_id, filtered_apartments, new_index, previous_message_ids)
        user_states[chat_id]['index'] = new_index
        user_states[chat_id]['message_ids'] = message_ids

    elif data.startswith('book_'):
        apartment_id = int(data.split('_')[1])
        apartment = next((apt for apt in apartments if apt['id'] == apartment_id), None)
        if apartment:
            user_states[chat_id]['booking_apartment'] = apartment
            bot.send_message(chat_id, f"–í—ã –≤—ã–±—Ä–∞–ª–∏ –¥–ª—è –±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏—è {apartment['name']}. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, —É–∫–∞–∂–∏—Ç–µ –≤–∞—à–µ –∏–º—è:")
            bot.register_next_step_handler(call.message, get_name)

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –∏–º–µ–Ω–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
def get_name(message):
    chat_id = message.chat.id
    user_states[chat_id]['user_name'] = message.text
    bot.send_message(chat_id, "–£–∫–∞–∂–∏—Ç–µ –≤–∞—à –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞:")
    bot.register_next_step_handler(message, get_phone)

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è —Ç–µ–ª–µ—Ñ–æ–Ω–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
def get_phone(message):
    chat_id = message.chat.id
    user_states[chat_id]['user_phone'] = message.text
    save_booking_request(chat_id)
    bot.send_message(chat_id, f"–°–ø–∞—Å–∏–±–æ! –í–∞—à–∞ –∑–∞—è–≤–∫–∞ –ø—Ä–∏–Ω—è—Ç–∞. –ù–∞—à –º–µ–Ω–µ–¥–∂–µ—Ä —Å–∫–æ—Ä–æ —Å–≤—è–∂–µ—Ç—Å—è —Å –≤–∞–º–∏ –¥–ª—è –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è.", reply_markup=create_main_menu())

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è –∑–∞—è–≤–∫–∏ –≤ —Ñ–∞–π–ª
def save_booking_request(chat_id):
    apartment = user_states[chat_id].get('booking_apartment')
    user_name = user_states[chat_id].get('user_name')
    user_phone = user_states[chat_id].get('user_phone')
    request_text = f"–ö–≤–∞—Ä—Ç–∏—Ä–∞: {apartment['name']}\n–ò–º—è: {user_name}\n–¢–µ–ª–µ—Ñ–æ–Ω: {user_phone}\n\n"

    with open('requests.txt', 'a') as file:
        file.write(request_text)

# –û–±—Ä–∞–±–æ—Ç–∫–∞ —Ç–µ–∫—Å—Ç–æ–≤—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π
@bot.message_handler(func=lambda message: True)
def handle_message(message):
    text = message.text.lower()
    is_admin = message.from_user.id in admin_ids

    if text == 'üè¢ —Å–ø–∏—Å–æ–∫ –ø–æ–º–µ—â–µ–Ω–∏–π':
        list_rooms(message)
    elif text == 'üìû –∫–æ–Ω—Ç–∞–∫—Ç—ã':
        bot.send_message(message.chat.id, '–ö–æ–Ω—Ç–∞–∫—Ç–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è:\n–¢–µ–ª–µ—Ñ–æ–Ω: +7 123 456-78-90\nEmail: info@example.com')
    elif text == '‚Ñπ –ø–æ–º–æ—â—å':
        help(message)
    elif text == 'üîß –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω–∏–µ' and is_admin:
        bot.send_message(message.chat.id, '–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –ø–∞–Ω–µ–ª—å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞!')
    else:
        bot.send_message(message.chat.id, '–ò–∑–≤–∏–Ω–∏—Ç–µ, —è –≤–∞—Å –Ω–µ –ø–æ–Ω—è–ª. –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ /help –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è —Å–ø–∏—Å–∫–∞ –∫–æ–º–∞–Ω–¥.', reply_markup=create_main_menu(is_admin))

# –ó–∞–ø—É—Å–∫ –±–æ—Ç–∞
bot.polling(none_stop=True)